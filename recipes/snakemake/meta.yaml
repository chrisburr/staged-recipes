{% set version = "5.4.2" %}

package:
  name: snakemake
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/s/snakemake/snakemake-{{ version }}.tar.gz
  sha256: 0896fd44d58ae4272fe77526f4f9e4a2600c1751ed727a078a5646f10dcf86cf

build:
  number: 0
  noarch: python

# Specifying `python` as a top-level build requirements to force conda to
# render the recipe correctly
requirements:
  build:
  - python

outputs:
  - name: snakemake-minimal

    build:
      script: "{{ PYTHON }} -m pip install . --no-deps -vv"
      entry_points:
        - snakemake = snakemake:main
        - snakemake-bash-completion = snakemake:bash_completion

    requirements:
      host:
        - python >=3.5
        - pip
        - setuptools
      run:
        - python >=3.5
        - setuptools
        - wrapt
        - requests
        - docutils
        - pyyaml
        - datrie
        - requests >=2.8.1
        - psutil
        - ratelimiter
        - configargparse
        - appdirs
        - jsonschema
        - gitpython

    test:
      imports:
        - snakemake
      commands:
        - export GIT\_PYTHON_REFRESH=warn  # [unix]
        - snakemake --version
        - snakemake --version | grep "{{ version }}"  # [unix]

  - name: snakemake

    requirements:
      run:
        - python
        - {{ pin_subpackage('snakemake-minimal', exact=True) }}
        # optional dependencies needed for the full experience
        # require this dropbox version to ensure that a conda doesn't pick up the
        # outdated version available
        - dropbox >=7.2.1
        - ftputil >=3.2
        - filechunkio >=1.6
        - pysftp >=0.2.8
        - psutil
        - aioeasywebdav
        # pandas is optional, but required for many workflows
        - pandas
        - python-irodsclient
        - google-cloud-storage
        - boto3
        - jsonschema
        - jinja2
        - pygraphviz
        - networkx >=2.0

    test:
      imports:
        - snakemake
      commands:
        - export GIT\_PYTHON_REFRESH=warn  # [unix]
        - snakemake --version
        - snakemake --version | grep "{{ version }}"  # [unix]

about:
  home: https://snakemake.readthedocs.io
  license: MIT
  license_family: MIT
  license_file: LICENSE.md
  summary: A pythonic workflow system
  description: |
    Snakemake is a workflow management system that aims to reduce the
    complexity of creating workflows by providing a fast and comfortable
    execution environment, together with a clean and modern specification
    language in python style. Snakemake workflows are essentially Python
    scripts extended by declarative code to define rules. Rules describe how
    to create output files from input files. This package provides the full
    installation including all optional dependencies.
  doc_url: https://snakemake.readthedocs.io
  dev_url: https://bitbucket.org/snakemake/snakemake

extra:
  recipe-maintainers:
    - chrisburr
